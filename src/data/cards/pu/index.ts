import type { IOxford } from "../../../types/index.js";

export const dir_pu: Record<string, () => Promise<IOxford>> = {
	pub: () => import("./pub.json") as unknown as Promise<IOxford>,
	public: () => import("./public.json") as unknown as Promise<IOxford>,
	publication: () =>
		import("./publication.json") as unknown as Promise<IOxford>,
	publicity: () => import("./publicity.json") as unknown as Promise<IOxford>,
	publish: () => import("./publish.json") as unknown as Promise<IOxford>,
	publisher: () => import("./publisher.json") as unknown as Promise<IOxford>,
	publishing: () => import("./publishing.json") as unknown as Promise<IOxford>,
	pudding: () => import("./pudding.json") as unknown as Promise<IOxford>,
	pull: () => import("./pull.json") as unknown as Promise<IOxford>,
	pulse: () => import("./pulse.json") as unknown as Promise<IOxford>,
	pump: () => import("./pump.json") as unknown as Promise<IOxford>,
	punch: () => import("./punch.json") as unknown as Promise<IOxford>,
	punish: () => import("./punish.json") as unknown as Promise<IOxford>,
	punishment: () => import("./punishment.json") as unknown as Promise<IOxford>,
	punk: () => import("./punk.json") as unknown as Promise<IOxford>,
	pupil: () => import("./pupil.json") as unknown as Promise<IOxford>,
	purchase: () => import("./purchase.json") as unknown as Promise<IOxford>,
	pure: () => import("./pure.json") as unknown as Promise<IOxford>,
	purely: () => import("./purely.json") as unknown as Promise<IOxford>,
	purple: () => import("./purple.json") as unknown as Promise<IOxford>,
	purpose: () => import("./purpose.json") as unknown as Promise<IOxford>,
	purse: () => import("./purse.json") as unknown as Promise<IOxford>,
	pursue: () => import("./pursue.json") as unknown as Promise<IOxford>,
	pursuit: () => import("./pursuit.json") as unknown as Promise<IOxford>,
	push: () => import("./push.json") as unknown as Promise<IOxford>,
	put: () => import("./put.json") as unknown as Promise<IOxford>,
	puzzle: () => import("./puzzle.json") as unknown as Promise<IOxford>,
};

import { IOxford } from "../../../types/index.js";

export const dir_be: Record<string, () => Promise<IOxford>> = {
  "be": () => import("./be.json") as unknown as Promise<IOxford>,
  "beach": () => import("./beach.json") as unknown as Promise<IOxford>,
  "beam": () => import("./beam.json") as unknown as Promise<IOxford>,
  "bean": () => import("./bean.json") as unknown as Promise<IOxford>,
  "bear": () => import("./bear.json") as unknown as Promise<IOxford>,
  "beard": () => import("./beard.json") as unknown as Promise<IOxford>,
  "beast": () => import("./beast.json") as unknown as Promise<IOxford>,
  "beat": () => import("./beat.json") as unknown as Promise<IOxford>,
  "beautiful": () => import("./beautiful.json") as unknown as Promise<IOxford>,
  "beauty": () => import("./beauty.json") as unknown as Promise<IOxford>,
  "because": () => import("./because.json") as unknown as Promise<IOxford>,
  "beckon": () => import("./beckon.json") as unknown as Promise<IOxford>,
  "become": () => import("./become.json") as unknown as Promise<IOxford>,
  "bed": () => import("./bed.json") as unknown as Promise<IOxford>,
  "bedroom": () => import("./bedroom.json") as unknown as Promise<IOxford>,
  "bee": () => import("./bee.json") as unknown as Promise<IOxford>,
  "beef": () => import("./beef.json") as unknown as Promise<IOxford>,
  "beer": () => import("./beer.json") as unknown as Promise<IOxford>,
  "before": () => import("./before.json") as unknown as Promise<IOxford>,
  "beforehand": () => import("./beforehand.json") as unknown as Promise<IOxford>,
  "beg": () => import("./beg.json") as unknown as Promise<IOxford>,
  "begin": () => import("./begin.json") as unknown as Promise<IOxford>,
  "beginning": () => import("./beginning.json") as unknown as Promise<IOxford>,
  "behalf": () => import("./behalf.json") as unknown as Promise<IOxford>,
  "behave": () => import("./behave.json") as unknown as Promise<IOxford>,
  "behavior": () => import("./behavior.json") as unknown as Promise<IOxford>,
  "behaviour": () => import("./behaviour.json") as unknown as Promise<IOxford>,
  "behind": () => import("./behind.json") as unknown as Promise<IOxford>,
  "being": () => import("./being.json") as unknown as Promise<IOxford>,
  "belief": () => import("./belief.json") as unknown as Promise<IOxford>,
  "believe": () => import("./believe.json") as unknown as Promise<IOxford>,
  "bell": () => import("./bell.json") as unknown as Promise<IOxford>,
  "belong": () => import("./belong.json") as unknown as Promise<IOxford>,
  "beloved": () => import("./beloved.json") as unknown as Promise<IOxford>,
  "below": () => import("./below.json") as unknown as Promise<IOxford>,
  "belt": () => import("./belt.json") as unknown as Promise<IOxford>,
  "bench": () => import("./bench.json") as unknown as Promise<IOxford>,
  "benchmark": () => import("./benchmark.json") as unknown as Promise<IOxford>,
  "bend": () => import("./bend.json") as unknown as Promise<IOxford>,
  "beneath": () => import("./beneath.json") as unknown as Promise<IOxford>,
  "beneficial": () => import("./beneficial.json") as unknown as Promise<IOxford>,
  "beneficiary": () => import("./beneficiary.json") as unknown as Promise<IOxford>,
  "benefit": () => import("./benefit.json") as unknown as Promise<IOxford>,
  "bent": () => import("./bent.json") as unknown as Promise<IOxford>,
  "beside": () => import("./beside.json") as unknown as Promise<IOxford>,
  "besides": () => import("./besides.json") as unknown as Promise<IOxford>,
  "best": () => import("./best.json") as unknown as Promise<IOxford>,
  "bet": () => import("./bet.json") as unknown as Promise<IOxford>,
  "betray": () => import("./betray.json") as unknown as Promise<IOxford>,
  "better": () => import("./better.json") as unknown as Promise<IOxford>,
  "between": () => import("./between.json") as unknown as Promise<IOxford>,
  "beverage": () => import("./beverage.json") as unknown as Promise<IOxford>,
  "bewildered": () => import("./bewildered.json") as unknown as Promise<IOxford>,
  "beyond": () => import("./beyond.json") as unknown as Promise<IOxford>,
};

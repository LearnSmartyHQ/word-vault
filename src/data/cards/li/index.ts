import { IOxford } from "../../../types/index.js";

export const dir_li: Record<string, () => Promise<IOxford>> = {
  "liable": () => import("./liable.json") as unknown as Promise<IOxford>,
  "liberal": () => import("./liberal.json") as unknown as Promise<IOxford>,
  "liberation": () => import("./liberation.json") as unknown as Promise<IOxford>,
  "liberty": () => import("./liberty.json") as unknown as Promise<IOxford>,
  "library": () => import("./library.json") as unknown as Promise<IOxford>,
  "licence": () => import("./licence.json") as unknown as Promise<IOxford>,
  "license": () => import("./license.json") as unknown as Promise<IOxford>,
  "lick": () => import("./lick.json") as unknown as Promise<IOxford>,
  "lid": () => import("./lid.json") as unknown as Promise<IOxford>,
  "lie": () => import("./lie.json") as unknown as Promise<IOxford>,
  "lie1": () => import("./lie1.json") as unknown as Promise<IOxford>,
  "lie2": () => import("./lie2.json") as unknown as Promise<IOxford>,
  "life": () => import("./life.json") as unknown as Promise<IOxford>,
  "lifelong": () => import("./lifelong.json") as unknown as Promise<IOxford>,
  "lifestyle": () => import("./lifestyle.json") as unknown as Promise<IOxford>,
  "lifetime": () => import("./lifetime.json") as unknown as Promise<IOxford>,
  "lift": () => import("./lift.json") as unknown as Promise<IOxford>,
  "light": () => import("./light.json") as unknown as Promise<IOxford>,
  "lighting": () => import("./lighting.json") as unknown as Promise<IOxford>,
  "like": () => import("./like.json") as unknown as Promise<IOxford>,
  "likelihood": () => import("./likelihood.json") as unknown as Promise<IOxford>,
  "likely": () => import("./likely.json") as unknown as Promise<IOxford>,
  "likewise": () => import("./likewise.json") as unknown as Promise<IOxford>,
  "limb": () => import("./limb.json") as unknown as Promise<IOxford>,
  "limit": () => import("./limit.json") as unknown as Promise<IOxford>,
  "limitation": () => import("./limitation.json") as unknown as Promise<IOxford>,
  "limited": () => import("./limited.json") as unknown as Promise<IOxford>,
  "line-up": () => import("./line-up.json") as unknown as Promise<IOxford>,
  "line": () => import("./line.json") as unknown as Promise<IOxford>,
  "linear": () => import("./linear.json") as unknown as Promise<IOxford>,
  "lineup": () => import("./lineup.json") as unknown as Promise<IOxford>,
  "linger": () => import("./linger.json") as unknown as Promise<IOxford>,
  "link": () => import("./link.json") as unknown as Promise<IOxford>,
  "lion": () => import("./lion.json") as unknown as Promise<IOxford>,
  "lip": () => import("./lip.json") as unknown as Promise<IOxford>,
  "liquid": () => import("./liquid.json") as unknown as Promise<IOxford>,
  "list": () => import("./list.json") as unknown as Promise<IOxford>,
  "listen": () => import("./listen.json") as unknown as Promise<IOxford>,
  "listener": () => import("./listener.json") as unknown as Promise<IOxford>,
  "listing": () => import("./listing.json") as unknown as Promise<IOxford>,
  "liter": () => import("./liter.json") as unknown as Promise<IOxford>,
  "literacy": () => import("./literacy.json") as unknown as Promise<IOxford>,
  "literally": () => import("./literally.json") as unknown as Promise<IOxford>,
  "literary": () => import("./literary.json") as unknown as Promise<IOxford>,
  "literature": () => import("./literature.json") as unknown as Promise<IOxford>,
  "litre": () => import("./litre.json") as unknown as Promise<IOxford>,
  "litter": () => import("./litter.json") as unknown as Promise<IOxford>,
  "little": () => import("./little.json") as unknown as Promise<IOxford>,
  "live": () => import("./live.json") as unknown as Promise<IOxford>,
  "live1": () => import("./live1.json") as unknown as Promise<IOxford>,
  "live2": () => import("./live2.json") as unknown as Promise<IOxford>,
  "lively": () => import("./lively.json") as unknown as Promise<IOxford>,
  "liver": () => import("./liver.json") as unknown as Promise<IOxford>,
  "living": () => import("./living.json") as unknown as Promise<IOxford>,
};

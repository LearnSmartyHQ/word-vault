import type { IOxford } from "../../../types/index.js";

export const dir_co: Record<string, () => Promise<IOxford>> = {
	coach: () => import("./coach.json") as unknown as Promise<IOxford>,
	coal: () => import("./coal.json") as unknown as Promise<IOxford>,
	coalition: () => import("./coalition.json") as unknown as Promise<IOxford>,
	coast: () => import("./coast.json") as unknown as Promise<IOxford>,
	coastal: () => import("./coastal.json") as unknown as Promise<IOxford>,
	coat: () => import("./coat.json") as unknown as Promise<IOxford>,
	cocktail: () => import("./cocktail.json") as unknown as Promise<IOxford>,
	code: () => import("./code.json") as unknown as Promise<IOxford>,
	coeducational: () =>
		import("./coeducational.json") as unknown as Promise<IOxford>,
	coffee: () => import("./coffee.json") as unknown as Promise<IOxford>,
	cognitive: () => import("./cognitive.json") as unknown as Promise<IOxford>,
	coin: () => import("./coin.json") as unknown as Promise<IOxford>,
	coincide: () => import("./coincide.json") as unknown as Promise<IOxford>,
	coincidence: () =>
		import("./coincidence.json") as unknown as Promise<IOxford>,
	cold: () => import("./cold.json") as unknown as Promise<IOxford>,
	collaborate: () =>
		import("./collaborate.json") as unknown as Promise<IOxford>,
	collaboration: () =>
		import("./collaboration.json") as unknown as Promise<IOxford>,
	collapse: () => import("./collapse.json") as unknown as Promise<IOxford>,
	collar: () => import("./collar.json") as unknown as Promise<IOxford>,
	colleague: () => import("./colleague.json") as unknown as Promise<IOxford>,
	collect: () => import("./collect.json") as unknown as Promise<IOxford>,
	collection: () => import("./collection.json") as unknown as Promise<IOxford>,
	collective: () => import("./collective.json") as unknown as Promise<IOxford>,
	collector: () => import("./collector.json") as unknown as Promise<IOxford>,
	college: () => import("./college.json") as unknown as Promise<IOxford>,
	collide: () => import("./collide.json") as unknown as Promise<IOxford>,
	collision: () => import("./collision.json") as unknown as Promise<IOxford>,
	colonial: () => import("./colonial.json") as unknown as Promise<IOxford>,
	colony: () => import("./colony.json") as unknown as Promise<IOxford>,
	color: () => import("./color.json") as unknown as Promise<IOxford>,
	colored: () => import("./colored.json") as unknown as Promise<IOxford>,
	colorful: () => import("./colorful.json") as unknown as Promise<IOxford>,
	colour: () => import("./colour.json") as unknown as Promise<IOxford>,
	coloured: () => import("./coloured.json") as unknown as Promise<IOxford>,
	colourful: () => import("./colourful.json") as unknown as Promise<IOxford>,
	column: () => import("./column.json") as unknown as Promise<IOxford>,
	columnist: () => import("./columnist.json") as unknown as Promise<IOxford>,
	combat: () => import("./combat.json") as unknown as Promise<IOxford>,
	combination: () =>
		import("./combination.json") as unknown as Promise<IOxford>,
	combine: () => import("./combine.json") as unknown as Promise<IOxford>,
	come: () => import("./come.json") as unknown as Promise<IOxford>,
	comedy: () => import("./comedy.json") as unknown as Promise<IOxford>,
	comfort: () => import("./comfort.json") as unknown as Promise<IOxford>,
	comfortable: () =>
		import("./comfortable.json") as unknown as Promise<IOxford>,
	comic: () => import("./comic.json") as unknown as Promise<IOxford>,
	command: () => import("./command.json") as unknown as Promise<IOxford>,
	commander: () => import("./commander.json") as unknown as Promise<IOxford>,
	commence: () => import("./commence.json") as unknown as Promise<IOxford>,
	commend: () => import("./commend.json") as unknown as Promise<IOxford>,
	comment: () => import("./comment.json") as unknown as Promise<IOxford>,
	commentary: () => import("./commentary.json") as unknown as Promise<IOxford>,
	commentator: () =>
		import("./commentator.json") as unknown as Promise<IOxford>,
	commerce: () => import("./commerce.json") as unknown as Promise<IOxford>,
	commercial: () => import("./commercial.json") as unknown as Promise<IOxford>,
	commission: () => import("./commission.json") as unknown as Promise<IOxford>,
	commissioner: () =>
		import("./commissioner.json") as unknown as Promise<IOxford>,
	commit: () => import("./commit.json") as unknown as Promise<IOxford>,
	commitment: () => import("./commitment.json") as unknown as Promise<IOxford>,
	committee: () => import("./committee.json") as unknown as Promise<IOxford>,
	commodity: () => import("./commodity.json") as unknown as Promise<IOxford>,
	common: () => import("./common.json") as unknown as Promise<IOxford>,
	commonly: () => import("./commonly.json") as unknown as Promise<IOxford>,
	communicate: () =>
		import("./communicate.json") as unknown as Promise<IOxford>,
	communication: () =>
		import("./communication.json") as unknown as Promise<IOxford>,
	communist: () => import("./communist.json") as unknown as Promise<IOxford>,
	community: () => import("./community.json") as unknown as Promise<IOxford>,
	commuter: () => import("./commuter.json") as unknown as Promise<IOxford>,
	companion: () => import("./companion.json") as unknown as Promise<IOxford>,
	company: () => import("./company.json") as unknown as Promise<IOxford>,
	comparable: () => import("./comparable.json") as unknown as Promise<IOxford>,
	comparative: () =>
		import("./comparative.json") as unknown as Promise<IOxford>,
	compare: () => import("./compare.json") as unknown as Promise<IOxford>,
	comparison: () => import("./comparison.json") as unknown as Promise<IOxford>,
	compassion: () => import("./compassion.json") as unknown as Promise<IOxford>,
	compel: () => import("./compel.json") as unknown as Promise<IOxford>,
	compelling: () => import("./compelling.json") as unknown as Promise<IOxford>,
	compensate: () => import("./compensate.json") as unknown as Promise<IOxford>,
	compensation: () =>
		import("./compensation.json") as unknown as Promise<IOxford>,
	compete: () => import("./compete.json") as unknown as Promise<IOxford>,
	competence: () => import("./competence.json") as unknown as Promise<IOxford>,
	competent: () => import("./competent.json") as unknown as Promise<IOxford>,
	competition: () =>
		import("./competition.json") as unknown as Promise<IOxford>,
	competitive: () =>
		import("./competitive.json") as unknown as Promise<IOxford>,
	competitor: () => import("./competitor.json") as unknown as Promise<IOxford>,
	compile: () => import("./compile.json") as unknown as Promise<IOxford>,
	complacent: () => import("./complacent.json") as unknown as Promise<IOxford>,
	complain: () => import("./complain.json") as unknown as Promise<IOxford>,
	complaint: () => import("./complaint.json") as unknown as Promise<IOxford>,
	complement: () => import("./complement.json") as unknown as Promise<IOxford>,
	complete: () => import("./complete.json") as unknown as Promise<IOxford>,
	completely: () => import("./completely.json") as unknown as Promise<IOxford>,
	completion: () => import("./completion.json") as unknown as Promise<IOxford>,
	complex: () => import("./complex.json") as unknown as Promise<IOxford>,
	complexity: () => import("./complexity.json") as unknown as Promise<IOxford>,
	compliance: () => import("./compliance.json") as unknown as Promise<IOxford>,
	complicated: () =>
		import("./complicated.json") as unknown as Promise<IOxford>,
	complication: () =>
		import("./complication.json") as unknown as Promise<IOxford>,
	comply: () => import("./comply.json") as unknown as Promise<IOxford>,
	component: () => import("./component.json") as unknown as Promise<IOxford>,
	compose: () => import("./compose.json") as unknown as Promise<IOxford>,
	composer: () => import("./composer.json") as unknown as Promise<IOxford>,
	composition: () =>
		import("./composition.json") as unknown as Promise<IOxford>,
	compound: () => import("./compound.json") as unknown as Promise<IOxford>,
	comprehend: () => import("./comprehend.json") as unknown as Promise<IOxford>,
	comprehension: () =>
		import("./comprehension.json") as unknown as Promise<IOxford>,
	comprehensive: () =>
		import("./comprehensive.json") as unknown as Promise<IOxford>,
	comprise: () => import("./comprise.json") as unknown as Promise<IOxford>,
	compromise: () => import("./compromise.json") as unknown as Promise<IOxford>,
	compulsory: () => import("./compulsory.json") as unknown as Promise<IOxford>,
	compute: () => import("./compute.json") as unknown as Promise<IOxford>,
	computer: () => import("./computer.json") as unknown as Promise<IOxford>,
	conceal: () => import("./conceal.json") as unknown as Promise<IOxford>,
	concede: () => import("./concede.json") as unknown as Promise<IOxford>,
	conceive: () => import("./conceive.json") as unknown as Promise<IOxford>,
	concentrate: () =>
		import("./concentrate.json") as unknown as Promise<IOxford>,
	concentration: () =>
		import("./concentration.json") as unknown as Promise<IOxford>,
	concept: () => import("./concept.json") as unknown as Promise<IOxford>,
	conception: () => import("./conception.json") as unknown as Promise<IOxford>,
	concern: () => import("./concern.json") as unknown as Promise<IOxford>,
	concerned: () => import("./concerned.json") as unknown as Promise<IOxford>,
	concerning: () => import("./concerning.json") as unknown as Promise<IOxford>,
	concert: () => import("./concert.json") as unknown as Promise<IOxford>,
	concession: () => import("./concession.json") as unknown as Promise<IOxford>,
	conclude: () => import("./conclude.json") as unknown as Promise<IOxford>,
	conclusion: () => import("./conclusion.json") as unknown as Promise<IOxford>,
	concrete: () => import("./concrete.json") as unknown as Promise<IOxford>,
	condemn: () => import("./condemn.json") as unknown as Promise<IOxford>,
	condition: () => import("./condition.json") as unknown as Promise<IOxford>,
	conduct: () => import("./conduct.json") as unknown as Promise<IOxford>,
	confer: () => import("./confer.json") as unknown as Promise<IOxford>,
	conference: () => import("./conference.json") as unknown as Promise<IOxford>,
	confess: () => import("./confess.json") as unknown as Promise<IOxford>,
	confession: () => import("./confession.json") as unknown as Promise<IOxford>,
	confidence: () => import("./confidence.json") as unknown as Promise<IOxford>,
	confident: () => import("./confident.json") as unknown as Promise<IOxford>,
	configuration: () =>
		import("./configuration.json") as unknown as Promise<IOxford>,
	confine: () => import("./confine.json") as unknown as Promise<IOxford>,
	confirm: () => import("./confirm.json") as unknown as Promise<IOxford>,
	confirmation: () =>
		import("./confirmation.json") as unknown as Promise<IOxford>,
	conflict: () => import("./conflict.json") as unknown as Promise<IOxford>,
	confront: () => import("./confront.json") as unknown as Promise<IOxford>,
	confrontation: () =>
		import("./confrontation.json") as unknown as Promise<IOxford>,
	confuse: () => import("./confuse.json") as unknown as Promise<IOxford>,
	confused: () => import("./confused.json") as unknown as Promise<IOxford>,
	confusing: () => import("./confusing.json") as unknown as Promise<IOxford>,
	confusion: () => import("./confusion.json") as unknown as Promise<IOxford>,
	congratulate: () =>
		import("./congratulate.json") as unknown as Promise<IOxford>,
	congratulation: () =>
		import("./congratulation.json") as unknown as Promise<IOxford>,
	congregation: () =>
		import("./congregation.json") as unknown as Promise<IOxford>,
	congress: () => import("./congress.json") as unknown as Promise<IOxford>,
	congressional: () =>
		import("./congressional.json") as unknown as Promise<IOxford>,
	connect: () => import("./connect.json") as unknown as Promise<IOxford>,
	connected: () => import("./connected.json") as unknown as Promise<IOxford>,
	connection: () => import("./connection.json") as unknown as Promise<IOxford>,
	conquer: () => import("./conquer.json") as unknown as Promise<IOxford>,
	conscience: () => import("./conscience.json") as unknown as Promise<IOxford>,
	conscious: () => import("./conscious.json") as unknown as Promise<IOxford>,
	consciousness: () =>
		import("./consciousness.json") as unknown as Promise<IOxford>,
	consecutive: () =>
		import("./consecutive.json") as unknown as Promise<IOxford>,
	consensus: () => import("./consensus.json") as unknown as Promise<IOxford>,
	consent: () => import("./consent.json") as unknown as Promise<IOxford>,
	consequence: () =>
		import("./consequence.json") as unknown as Promise<IOxford>,
	consequently: () =>
		import("./consequently.json") as unknown as Promise<IOxford>,
	conservation: () =>
		import("./conservation.json") as unknown as Promise<IOxford>,
	conservative: () =>
		import("./conservative.json") as unknown as Promise<IOxford>,
	conserve: () => import("./conserve.json") as unknown as Promise<IOxford>,
	consider: () => import("./consider.json") as unknown as Promise<IOxford>,
	considerable: () =>
		import("./considerable.json") as unknown as Promise<IOxford>,
	considerably: () =>
		import("./considerably.json") as unknown as Promise<IOxford>,
	consideration: () =>
		import("./consideration.json") as unknown as Promise<IOxford>,
	consist: () => import("./consist.json") as unknown as Promise<IOxford>,
	consistency: () =>
		import("./consistency.json") as unknown as Promise<IOxford>,
	consistent: () => import("./consistent.json") as unknown as Promise<IOxford>,
	consistently: () =>
		import("./consistently.json") as unknown as Promise<IOxford>,
	consolidate: () =>
		import("./consolidate.json") as unknown as Promise<IOxford>,
	conspiracy: () => import("./conspiracy.json") as unknown as Promise<IOxford>,
	constant: () => import("./constant.json") as unknown as Promise<IOxford>,
	constantly: () => import("./constantly.json") as unknown as Promise<IOxford>,
	constituency: () =>
		import("./constituency.json") as unknown as Promise<IOxford>,
	constitute: () => import("./constitute.json") as unknown as Promise<IOxford>,
	constitution: () =>
		import("./constitution.json") as unknown as Promise<IOxford>,
	constitutional: () =>
		import("./constitutional.json") as unknown as Promise<IOxford>,
	constraint: () => import("./constraint.json") as unknown as Promise<IOxford>,
	construct: () => import("./construct.json") as unknown as Promise<IOxford>,
	construction: () =>
		import("./construction.json") as unknown as Promise<IOxford>,
	consult: () => import("./consult.json") as unknown as Promise<IOxford>,
	consultant: () => import("./consultant.json") as unknown as Promise<IOxford>,
	consultation: () =>
		import("./consultation.json") as unknown as Promise<IOxford>,
	consume: () => import("./consume.json") as unknown as Promise<IOxford>,
	consumer: () => import("./consumer.json") as unknown as Promise<IOxford>,
	consumption: () =>
		import("./consumption.json") as unknown as Promise<IOxford>,
	contact: () => import("./contact.json") as unknown as Promise<IOxford>,
	contagious: () => import("./contagious.json") as unknown as Promise<IOxford>,
	contain: () => import("./contain.json") as unknown as Promise<IOxford>,
	container: () => import("./container.json") as unknown as Promise<IOxford>,
	contemplate: () =>
		import("./contemplate.json") as unknown as Promise<IOxford>,
	contemporary: () =>
		import("./contemporary.json") as unknown as Promise<IOxford>,
	contempt: () => import("./contempt.json") as unknown as Promise<IOxford>,
	contend: () => import("./contend.json") as unknown as Promise<IOxford>,
	contender: () => import("./contender.json") as unknown as Promise<IOxford>,
	content: () => import("./content.json") as unknown as Promise<IOxford>,
	content1: () => import("./content1.json") as unknown as Promise<IOxford>,
	content2: () => import("./content2.json") as unknown as Promise<IOxford>,
	contention: () => import("./contention.json") as unknown as Promise<IOxford>,
	contest: () => import("./contest.json") as unknown as Promise<IOxford>,
	context: () => import("./context.json") as unknown as Promise<IOxford>,
	continent: () => import("./continent.json") as unknown as Promise<IOxford>,
	continually: () =>
		import("./continually.json") as unknown as Promise<IOxford>,
	continue: () => import("./continue.json") as unknown as Promise<IOxford>,
	continuous: () => import("./continuous.json") as unknown as Promise<IOxford>,
	contract: () => import("./contract.json") as unknown as Promise<IOxford>,
	contractor: () => import("./contractor.json") as unknown as Promise<IOxford>,
	contradiction: () =>
		import("./contradiction.json") as unknown as Promise<IOxford>,
	contrary: () => import("./contrary.json") as unknown as Promise<IOxford>,
	contrast: () => import("./contrast.json") as unknown as Promise<IOxford>,
	contribute: () => import("./contribute.json") as unknown as Promise<IOxford>,
	contribution: () =>
		import("./contribution.json") as unknown as Promise<IOxford>,
	contributor: () =>
		import("./contributor.json") as unknown as Promise<IOxford>,
	control: () => import("./control.json") as unknown as Promise<IOxford>,
	controversial: () =>
		import("./controversial.json") as unknown as Promise<IOxford>,
	controversy: () =>
		import("./controversy.json") as unknown as Promise<IOxford>,
	convenience: () =>
		import("./convenience.json") as unknown as Promise<IOxford>,
	convenient: () => import("./convenient.json") as unknown as Promise<IOxford>,
	convention: () => import("./convention.json") as unknown as Promise<IOxford>,
	conventional: () =>
		import("./conventional.json") as unknown as Promise<IOxford>,
	conversation: () =>
		import("./conversation.json") as unknown as Promise<IOxford>,
	converse: () => import("./converse.json") as unknown as Promise<IOxford>,
	conversion: () => import("./conversion.json") as unknown as Promise<IOxford>,
	convert: () => import("./convert.json") as unknown as Promise<IOxford>,
	convey: () => import("./convey.json") as unknown as Promise<IOxford>,
	convict: () => import("./convict.json") as unknown as Promise<IOxford>,
	conviction: () => import("./conviction.json") as unknown as Promise<IOxford>,
	convince: () => import("./convince.json") as unknown as Promise<IOxford>,
	convinced: () => import("./convinced.json") as unknown as Promise<IOxford>,
	convincing: () => import("./convincing.json") as unknown as Promise<IOxford>,
	cook: () => import("./cook.json") as unknown as Promise<IOxford>,
	cooker: () => import("./cooker.json") as unknown as Promise<IOxford>,
	cookie: () => import("./cookie.json") as unknown as Promise<IOxford>,
	cooking: () => import("./cooking.json") as unknown as Promise<IOxford>,
	cool: () => import("./cool.json") as unknown as Promise<IOxford>,
	cooperate: () => import("./cooperate.json") as unknown as Promise<IOxford>,
	cooperation: () =>
		import("./cooperation.json") as unknown as Promise<IOxford>,
	cooperative: () =>
		import("./cooperative.json") as unknown as Promise<IOxford>,
	coordinate: () => import("./coordinate.json") as unknown as Promise<IOxford>,
	coordination: () =>
		import("./coordination.json") as unknown as Promise<IOxford>,
	coordinator: () =>
		import("./coordinator.json") as unknown as Promise<IOxford>,
	cop: () => import("./cop.json") as unknown as Promise<IOxford>,
	cope: () => import("./cope.json") as unknown as Promise<IOxford>,
	copper: () => import("./copper.json") as unknown as Promise<IOxford>,
	copy: () => import("./copy.json") as unknown as Promise<IOxford>,
	copyright: () => import("./copyright.json") as unknown as Promise<IOxford>,
	core: () => import("./core.json") as unknown as Promise<IOxford>,
	corn: () => import("./corn.json") as unknown as Promise<IOxford>,
	corner: () => import("./corner.json") as unknown as Promise<IOxford>,
	corporate: () => import("./corporate.json") as unknown as Promise<IOxford>,
	corporation: () =>
		import("./corporation.json") as unknown as Promise<IOxford>,
	corpse: () => import("./corpse.json") as unknown as Promise<IOxford>,
	correct: () => import("./correct.json") as unknown as Promise<IOxford>,
	correction: () => import("./correction.json") as unknown as Promise<IOxford>,
	correctly: () => import("./correctly.json") as unknown as Promise<IOxford>,
	correlate: () => import("./correlate.json") as unknown as Promise<IOxford>,
	correlation: () =>
		import("./correlation.json") as unknown as Promise<IOxford>,
	correspond: () => import("./correspond.json") as unknown as Promise<IOxford>,
	correspondence: () =>
		import("./correspondence.json") as unknown as Promise<IOxford>,
	correspondent: () =>
		import("./correspondent.json") as unknown as Promise<IOxford>,
	corresponding: () =>
		import("./corresponding.json") as unknown as Promise<IOxford>,
	corridor: () => import("./corridor.json") as unknown as Promise<IOxford>,
	corrupt: () => import("./corrupt.json") as unknown as Promise<IOxford>,
	corruption: () => import("./corruption.json") as unknown as Promise<IOxford>,
	cost: () => import("./cost.json") as unknown as Promise<IOxford>,
	costly: () => import("./costly.json") as unknown as Promise<IOxford>,
	costume: () => import("./costume.json") as unknown as Promise<IOxford>,
	cottage: () => import("./cottage.json") as unknown as Promise<IOxford>,
	cotton: () => import("./cotton.json") as unknown as Promise<IOxford>,
	could: () => import("./could.json") as unknown as Promise<IOxford>,
	council: () => import("./council.json") as unknown as Promise<IOxford>,
	councillor: () => import("./councillor.json") as unknown as Promise<IOxford>,
	councilor: () => import("./councilor.json") as unknown as Promise<IOxford>,
	counseling: () => import("./counseling.json") as unknown as Promise<IOxford>,
	counselling: () =>
		import("./counselling.json") as unknown as Promise<IOxford>,
	counsellor: () => import("./counsellor.json") as unknown as Promise<IOxford>,
	counselor: () => import("./counselor.json") as unknown as Promise<IOxford>,
	count: () => import("./count.json") as unknown as Promise<IOxford>,
	counter: () => import("./counter.json") as unknown as Promise<IOxford>,
	counterpart: () =>
		import("./counterpart.json") as unknown as Promise<IOxford>,
	countless: () => import("./countless.json") as unknown as Promise<IOxford>,
	country: () => import("./country.json") as unknown as Promise<IOxford>,
	countryside: () =>
		import("./countryside.json") as unknown as Promise<IOxford>,
	county: () => import("./county.json") as unknown as Promise<IOxford>,
	coup: () => import("./coup.json") as unknown as Promise<IOxford>,
	couple: () => import("./couple.json") as unknown as Promise<IOxford>,
	courage: () => import("./courage.json") as unknown as Promise<IOxford>,
	course: () => import("./course.json") as unknown as Promise<IOxford>,
	course_1: () => import("./course_1.json") as unknown as Promise<IOxford>,
	court: () => import("./court.json") as unknown as Promise<IOxford>,
	courtesy: () => import("./courtesy.json") as unknown as Promise<IOxford>,
	cousin: () => import("./cousin.json") as unknown as Promise<IOxford>,
	cover: () => import("./cover.json") as unknown as Promise<IOxford>,
	coverage: () => import("./coverage.json") as unknown as Promise<IOxford>,
	covered: () => import("./covered.json") as unknown as Promise<IOxford>,
	cow: () => import("./cow.json") as unknown as Promise<IOxford>,
	cowboy: () => import("./cowboy.json") as unknown as Promise<IOxford>,
};
